name: Release Honeypot
on:
  workflow_dispatch:

# The docker publishing pieces were copied and modified from https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      # Needed to publish releases
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - name: Get version
        id: get-version
        working-directory: packages/honeypot
        run: |
          version=$(cat version.json | jq --raw-output .version)

          echo "releaseVersion=$version" >> "$GITHUB_OUTPUT"

      - name: Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v0.1.15
        with:
          name: honeypot-v${{ steps.get-version.outputs.releaseVersion }}
          tag_name: honeypot-v${{ steps.get-version.outputs.releaseVersion }}
          body: The new container image can be found at https://github.com/Grunet?tab=packages&repo_name=cloud-native-honeypot&ecosystem=container

      # Install the cosign tool
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.1.1
        with:
          cosign-release: "v2.1.1"

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@4c0219f9ac95b02789c1075625400b2acbff50b1 # v2.9.1

      # Login against Github Container Registry
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Needed because my Github account name contains an uppercase character which isn't allowed in a docker tag (and doesn't match the tags generated by the previous action)
      # See https://github.com/orgs/community/discussions/25768 for more details
      - name: Downcase account name and generate version Docker tag
        id: get-version-tag
        run: |
          unmodifiedTag=${{ env.REGISTRY}}/${{ env.IMAGE_NAME }}:v${{ steps.get-version.outputs.releaseVersion }}
          fullyLowercaseTag=${unmodifiedTag,,}

          echo "tag=$fullyLowercaseTag" >> "$GITHUB_OUTPUT"

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          context: ./packages/honeypot/src/
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.get-version-tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
